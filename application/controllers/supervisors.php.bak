<?php
require APPPATH.'controllers/messages.php';
class Supervisors extends MY_Controller {

    function __construct() {
        parent::__construct();
        $this->load->library('session');
    }

    function index() {
        $data['done_tests'] = $this->getTestsDone();
      //  print_r($data['done_tests']);
        $data['settings_view'] = 'supervisors_index_v';
        $data['noty']=  $this->getNotifications();
        $this->base_params($data);
    }
    
    function upload_bacterial_endotoxin($labref, $r_stat,$test,$tid,$aid) {
        $data['labref']=$labref;
        $data['repeat_status']=$r_stat;
        $data['test_subject']=$test;
        $data['test_id']=$tid;
        $data['analyst_id']=$aid;
        $data['settings_view'] = 'upload_v_microbe_s';
        
        $this->base_params($data);
    }
    
        
    function upload_corrected_workbook($labref, $r_stat,$test,$tid,$aid) {
        $data['labref']=$labref;
        $data['repeat_status']=$r_stat;
        $data['test_subject']=$test;
        $data['test_id']=$tid;
        $data['analyst_id']=$aid;
        $data['settings_view'] = 'upload_v_wet_chem';
        
        $this->base_params($data);
    }
    
      function upload_microbial_assay($labref, $r_stat,$test,$tid,$aid) {
        $data['labref']=$labref;
        $data['repeat_status']=$r_stat;
        $data['test_subject']=$test;
        $data['test_id']=$tid;
        $data['analyst_id']=$aid;
        $data['settings_view'] = 'upload_v_micro_s';
        
        $this->base_params($data);
    }
    
    
    
     function do_upload($labref, $r_stat,$test,$tid,$aid,$supervisor='') {
       // $this->makeDir();
     
      
     $filename = "analyst_upoads/" . $labref .'xlsx';

     if (file_exists($filename)) {
         unlink($filename);           
        } 
            $config['upload_path'] = "analyst_uploads/";         
            $config['allowed_types'] = 'xls|xlsx|pdf';
        
        $this->load->library('upload', $config);
        
        if (!$this->upload->do_upload('worksheet')) {
              $data['labref']=$labref;
        $data['repeat_status']=$r_stat;
        $data['test_subject']=$test;
        $data['test_id']=$tid;
        $data['analyst_id']=$aid;
            $data['error'] = $this->upload->display_errors();        
            $data['settings_view'] = 'upload_v_wet_chem';            
            $this->base_params($data);
        } else {
            $this->approve_data();
      
        }
    }
 
    
    
       function do_upload_ma($labref, $r_stat,$test,$tid,$aid,$supervisor='') {
       // $this->makeDir();
     
      
     $filename = "analyst_upoads/" . $labref . '_micro.xlsx';

     if (file_exists($filename)) {
         unlink($filename);           
        } 
            $config['upload_path'] = "analyst_uploads/";         
            $config['allowed_types'] = 'xls|xlsx|pdf';
        
        $this->load->library('upload', $config);
        
        if (!$this->upload->do_upload('worksheet')) {
              $data['labref']=$labref;
        $data['repeat_status']=$r_stat;
        $data['test_subject']=$test;
        $data['test_id']=$tid;
        $data['analyst_id']=$aid;
            $data['error'] = $this->upload->display_errors();        
            $data['settings_view'] = 'upload_v_micro_s';            
            $this->base_params($data);
        } else {
            $this->approve_data();
      
        }
    }
 
    
    
    function do_upload_be_s($labref, $r_stat,$test,$tid,$aid,$supervisor='') {
       // $this->makeDir();
     
      
     $filename = "analyst_upoads/" . $labref . '_microlal.xlsx';

     if (file_exists($filename)) {
         unlink($filename);           
        } 
            $config['upload_path'] = "analyst_uploads/";         
            $config['allowed_types'] = 'xls|xlsx|pdf';
        
        $this->load->library('upload', $config);
        
        if (!$this->upload->do_upload('worksheet')) {
              $data['labref']=$labref;
        $data['repeat_status']=$r_stat;
        $data['test_subject']=$test;
        $data['test_id']=$tid;
        $data['analyst_id']=$aid;
            $data['error'] = $this->upload->display_errors();        
            $data['settings_view'] = 'upload_v_microbe_s';            
            $this->base_params($data);
        } else {
            $this->approve_data();
      
        }
    }

    
    
    function notifications() {
        $data['getnoty'] = $this->getNotification_data();
        $data['settings_view'] = 'supervisors_index_noty';
        $data['noty']=  $this->getNotifications();
        $this->base_params($data);
    }
    
    function approve_it($labref){
         $id=  $this->session->userdata('user_id');
        $this->db->where('labref',$labref)->where('supervisor_id',$id)->update('analyst_request',array('status'=>'1')); 
        $this->delete_one($labref);
        redirect('supervisors/notifications');
    }
    
    function delete_one($labref){
        $this->db->query("delete from analyst_download_counter where id not in ( select * from ( select min(id) from analyst_download_counter where labref IN ( '$labref') group by test, labref ) tmp ) ");
    }
    
    function reject_test() {
       
        $data['labref']  =$labref= $this->uri->segment(3);
        $data['test'] = $this->uri->segment(6);
        $data['test_id'] = $this->uri->segment(4);
        $this->session->set_userdata('labref',$labref);
     //   $data['test_name']=  $this->t();
        $data['analyst_id'] = $this->uri->segment(5);
        $data['settings_view']='compose_v_1';
        $this->base_params($data);
    }
    
    function reject($labref,$test_id,$analyst_id){
  
        $reacon=  $this->input->post('message');
        $ar=array(
            'reject_status'=>'1',
            'reject_reason'=>$reacon,
                 'completion'=>'0'
        );
        $this->db
                ->where('lab_ref_no',$labref)
                ->where('test_id',$test_id)
                ->where('analyst_id',$analyst_id)
                ->update('sample_issuance',$ar);
        
        $this->db
                ->where('labref',$labref)
                ->where('test_id',$test_id)
                ->where('analyst_id',$analyst_id)
                ->update('tests_done',array('approval_status'=>2));
        
        $messages = new Messages();
        $messages->send();
    }
   
            
    
    function t(){
        $t= $this->uri->segment(6);
        return $this->db->where('id',$t)->get('tests')->result();
    }

    function home() {
	//error_reporting(1);
        
        $labref = $this->uri->segment(3);
        $this->session->set_userdata('lab', $labref);
        $data['analyst_data'] = $this->getAnalystData();
        //var_dump($data['analyst_data']);
        //var_dump($this->getTestsDone());
        $data1 = $this->getSessionAnalystId();
        $name = $data1[0]->analyst_name;
        $id = $data1[0]->analyst_id;
        $this->session->set_userdata(array('analyst_id' => $id, 'analyst_name' => $name));
        $data['pm_count'] = $this->pm_count();
        //$data['username']=  $this->getUsername();
        $data['settings_view'] = 'supervisors_v';
         $data['noty']=  $this->getNotifications();
        $this->base_params($data);
    }

    function pm_count() {
        $user_id = $this->session->userdata('user_id');
        $this->db->select('pm_count,username');
        $this->db->where('id', $user_id);
        $query = $this->db->get('user');
        $result = $query->result();
        return $result;
    }
    
    function getNotification_data(){
        $id=  $this->session->userdata('user_id');
        return $this->db->where('supervisor_id',$id)->where('status','0')->get('analyst_request')->result();
    }

    function getTestsDone() {
        $supervisor_id = $this->session->userdata('user_id');
        
        $this->db->where('supervisor_id', $supervisor_id);
     //  $this->db->where('worksheet_status', 0);
         $this->db->where('oos', 0);
    $this->db->where('approval_status', 0);
  //$this->db->or_where('approval_status', 2);
        $this->db->group_by('labref');
       // $this->db->having('approval_status = ', '0');
        //$this->db->group_by('repeat_status');
        $query = $this->db->get('tests_done');
        return $result = $query->result();
        // print_r($result);
    }
    
         public function approve_data(){
       $labref=  $this->uri->segment(3);
        $this->Returning_to_documentation($labref);
       $r=  $this->uri->segment(4);
       $test_id=  $this->uri->segment(6);
       $priority=  $this->findPriority($labref);
            $urgency=$priority[0]->urgency;
      $supervisor_id=  $this->session->userdata('user_id');
       $supervisor=  $this->getSupervisorName();
       //print_r($supervisor);
       $supervisor_name=$supervisor[0]->fname." ".$supervisor[0]->lname;
       $analyst=  $this->getAnalystName();
       $analyst_name=$analyst[0]->analyst_name;
         $tname=  $this->uri->segment(5); 
         $_tid=  $this->uri->segment(6); 
         
         If($_tid =='49' ){
             $department = '0';
             $path='analyst_uploads/'.$labref.'_micro.xlsx';
             $this->UniversalWorkbookReader($labref, $path);
         }else if($_tid =='50'){
              $department = '0';
             $path='analyst_uploads/'.$labref.'_microlal.xlsx';
             $this->UniversalWorkbookReader($labref, $path);  
         }else{
             $department='1';
             $path='analyst_uploads/'.$labref.'.xlsx';
             $this->UniversalWorkbookReader($labref, $path);  
         }
       
       $approve_data=array(
           'supervisor_name'=>$supervisor_name,
           'analyst_name'=>$analyst_name,
           'labref'=>$labref,
           'repeat_status'=>$r,
           'test_name'=>$tname,
           'test_product'=>'formicrobiology',
           'supervisor_id'=>$supervisor_id,
           'user_type'=>'5',
           'status'=>'1',
           'priority'=>$urgency,
           'test_id'=>$test_id,
           'department'=>$department,
       );
      // $this->db->insert('supervisor_approvals',$approve_data);
       
       $this->db->where('labref',$labref);
       $this->db->where('repeat_status',$r);
       $this->db->where('test_subject',$tname);
       $this->db->update('tests_done',array('approval_status'=>'1'));
       
       $this->compareToDecide($labref);
       
       redirect('supervisors/home/'.$this->session->userdata('lab'));
       
       
    }
     public function approve(){
       $labref=  $this->uri->segment(3);
       $r=  $this->uri->segment(4);
       $tname=  $this->uri->segment(5); 
      
       $this->db->where('labref',$labref);
       $this->db->where('repeat_status',$r);
       $this->db->where('test_name',$tname);
            $query=  $this->db->get('supervisor_approvals');
       if($query->num_rows()>0){
           echo 'Already Approved';
       }else{
           $this->approve_data();  
       }
               
    }

    function getAnalystData() {
        error_reporting(0);
         $supervisor_id = $this->session->userdata('user_id');
         $url = $this->uri->segment(3);
        $data1 = $this->getAnalystId($url);
         // print_r($data1);
        foreach ($data1 as $data) {       
            $analyst_id = $data->analyst_id;
           $query= $this->db->where('labref', $url)
                            ->where('analyst_id', $analyst_id)
                            ->where('supervisor_id', $supervisor_id)
                            ->where('oos', '0')
                            ->get('tests_done')
                            ->result();
            
        }
        return $query;
      //  print_r($query);
    }

    function getAnalystId($url = '') {
        $supervisor_id = $this->session->userdata('user_id');
        $this->db->select('analyst_id');
        $this->db->where('supervisor_id', $supervisor_id);
        $this->db->where('labref', $url);
        $query = $this->db->get('tests_done');
        return $result = $query->result();
    }

    function getSessionAnalystId() {
        $supervisor_id = $this->session->userdata('user_id');
        $this->db->select('analyst_id,analyst_name');
        $this->db->where('supervisor_id', $supervisor_id);
        $query = $this->db->get('analyst_supervisor');
        return $result = $query->result();
    }

    public function getSupervisor() {
        $user_id = $this->session->userdata('user_id');
        $this->db->select('fname,lname');
        $this->db->where('id', $user_id);
        $query = $this->db->get('user');
        return $result = $query->result();
       // print_r($result);
    }
    function getNotifications(){
        $id=  $this->session->userdata('user_id');
        return $this->db->where('supervisor_id',$id)->where('status','0')->get('analyst_request')->num_rows();
    }

    public function base_params($data) {
        $data['title'] = "Supervisors";
        $data['styles'] = array("jquery-ui.css");
        $data['scripts'] = array("jquery-ui.js");
        $data['scripts'] = array("SpryAccordion.js");
        $data['styles'] = array("SpryAccordion.css");
        $data['content_view'] = "settings_v";
        //$data['banner_text'] = "NQCL Settings";
        //$data['link'] = "settings_management";

        $this->load->view('template', $data);
    }

}

?>
