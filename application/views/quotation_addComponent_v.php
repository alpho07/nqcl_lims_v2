<form class="methods" id="addComponent">
		<nav class="panel container">
			<p class="panel-heading">Add component for <?php echo $quotations_id; ?></p>
			<?php foreach($components as $key => $component){ ?>
				<div class="panel-block block-multic columns">
					<div class="column"><h6><?php echo $component['component'] ?></h6></div>
					<div class="column "><a class="remove" id='default_remove' data-component_name="<?php echo $component['component'] ?>" data-db = "true" data-block_id = "d<?php echo $key ?>" data-component_id = "<?php echo $component['id'] ?>" href="">Remove</a></div>
				</div>
			<?php }?>
				<div class="panel-block block-multic columns hidden newBlock" id="newComponentBlock0">
					<div class="control column is-4">
						<div class="field">
							<label class="label" >New Component</label>
							<input class="input component_input" data-block_id="0" id="component_name_0" type="text" name="components[]" >
						</div>
					</div>
					<div class="column is-offset-one-quarter">
						<ul>

							<?php foreach($tests as $test){ ?>
								<li><input data-block_id = "0" class="test_checkbox" type="checkbox" name="tests[]" value="<?php echo $test['tests'][0]['id'] ?>"><?php echo $test['tests'][0]['Name'] ?></li> 
							<?php } ?>
						</ul>
					</div>
					<div class="column"><a class="remove" id="added_remove" data-db ="false" data-block_id="0" href="">Remove</a>
					</div>
				</div>
				<div>
					<a class="add" data-block_id="" id=1 href="">Add Component</a>
				</div>
			<!--Autogenerated html goes here-->
			<div class="column control is-2">
				<div class="field">
					<input type="submit" class="button is-primary" value="Update">	
				</div>
			</div>
		</nav>
</form>

<script type="text/javascript">
	
	//On type, suggest
$(function(){


	//Add Component
	$('.add').on('click', function(e){
		e.preventDefault();

		//Get number of blocks
		blockCount = $('.newBlock').length;

		//Clone div, assign new id
		$('#newComponentBlock0').clone().attr('id', 'newComponentBlock'+blockCount).insertAfter('#newComponentBlock0');
		$('#newComponentBlock'+blockCount+ ' :input').attr('data-block_id', blockCount);
		$('#newComponentBlock'+blockCount+ ' a[href]').attr('data-block_id', blockCount);

	})

	//Remove Component
	$(this).on('click', '.remove', function(e){

		//Prevent default action
		e.preventDefault();
		
		//Get block id, component id
		data_db = $(this).attr('data-db');
		block_id = $(this).attr('data-block_id');
		component_id = $(this).attr('data-component_id');
		component_name = $(this).attr('data-component_name');
		console.log(component_id)
		
		//Condition if component is in db/or currently added
		if(data_db == 'true'){

			//Remove URL
			remove_url =  '<?php echo base_url().'quotation/removeComponent/'.$quotations_id;?>/'+component_id+'/'+component_name;
			console.log(remove_url)

					//Notify Removal
					var n = new Noty({ 
						theme: 'mint',
						type:'info',
		                text: 'Are you sure you want to remove ' +component_name,
		                buttons:[
		                	Noty.button('YES', 'is-success is-small', function(){
		                		
		                		//Remove POST
								axios.post(remove_url).then(function(response){
									if(response.statusText == 'OK'){

										//Close dialog
										n.close();

										//Remove Block
										$('#newComponentBlock'+block_id).remove();

										//Return success message
										var m = new Noty({
											theme:'mint',
											type: 'success',
											text:'Component '+component_name+' removed successfully.'
										}).show();
									}
		                		}).catch(function(){

							})


		                }),

		                Noty.button('NO', 'is-warning is-small', function(){
		                	n.close(); 
		                })	
		                ]
	            	}).show();

				}
		else{
			if(block_id != 0){
				$('#newComponentBlock'+block_id).remove();
			}
		}

	})


	//On clicking the test checkbox change the name of the checkbox
	$('#component_name_0', this).keyup(function(e){
		e.preventDefault();

		//Get component name
		blockId = $(this).attr('data-block_id');
		component_name = $(this).val();
		component_name_concat = component_name.replace(/[^A-Z0-9]/ig,"_");
		newCheckBoxName = component_name_concat+'_tests[]';

		console.log(newCheckBoxName);

		//Get testbox, to change name to
		console.log($('.test_checkbox[data-block_id = '+blockId+']').attr('name', newCheckBoxName));
	})


	$(this).on('keyup', '.component_input', function(e){
		e.preventDefault();

		//Get component name
		blockId = $(this).attr('data-block_id');
		component_name = $(this).val();
		component_name_concat = component_name.replace(/[^A-Z0-9]/ig,"_");
		newCheckBoxName = component_name_concat+'_tests[]';

		//Get testbox, to change name to
		$('.test_checkbox[data-block_id = '+blockId+']').attr('name', newCheckBoxName);
	})



	$('#test_name').autocomplete({
		source: function(request, response) {
			$.ajax({	
				url: '<?php echo base_url(); ?>quotation/testsSearch/',
				data: {term: $('#test_name').val()},
				dataType: "json",
				type:"POST",
				success: function(data){
					response(data);
				}
			});
		},
		minLength: 2,
		delay: 200,
		select: function(event, ui){

			//Set value of test hidden field
			$('#addTest_h').val(ui.item.value);

			//Get methods url
			methods_url = '<?php echo base_url().'quotation/getMethods' ?>/'+ui.item.value+'/<?php echo $currency ?>';

			//Get methods of test picked
			axios.get(methods_url).
			then(function(response){
				$.each(response.data, function(index, value){

					//Get value of multicomponent status
					var mc_status = value.Mc_status;
					var radios_html = ['<li><input class="radios" name="methods_" type="radio" value="42"> None </li>'];

					$.each(value.Test_methods, function(i, v){
						console.log(v.id)
						radios_html.push('<li><input class="radios" name="methods_" type ="radio" value="'+v.id+'"> '+v.name+'</li>') 
					})

					//Console log
					console.log(radios_html)
					console.log(mc_status)

					//Populate unordered list with generated radio inputs
					$('.multic').html(radios_html);

				})

			}).
			catch(function(error){
				console.log(error)
			});

			//Check whether test picked is multi-c
			
		}
	})


$('#addComponent').submit(function(e){
	e.preventDefault();
	
	//Get form
	var form = $("#addComponent");

	//Submit Url
	var url = "<?php echo base_url().'quotation/addComponent/'. $quotations_id. '/'. $currency ?>";
	console.log(url);

	//Get formdata
	var formData = new FormData(form[0]);
	//console.log(formdata)

	//Pass to server via Axios
	axios.post(url, formData).
	then(function(response){
		if(response.statusText == 'OK'){
			new Noty({ 
				theme: 'mint',
                type: 'success',
                text: 'Component added successfully.',
                callbacks:{
                	afterShow:function(){
                		parent.$.fancybox.close();
                	}
                }
            }).show();
		}
	}).
	catch(function(error){
		new Noty({
			text:'Error occured, Contact support.',
			type:'error'
		}).show();
	})

})




})

</script>